#!/usr/bin/guile \
-e main -s
!#

(use-modules (srfi srfi-1))
(use-modules (srfi srfi-19))
(use-modules (json))

(define FILE "/home/obabo/Personal/Statistics/didit.json")

(define data
  (json->scm (open-input-file FILE)))

(define dates
  (map (lambda (x) (string->date x "~Y-~m-~d"))
       (vector->list data)))

; Gets the difference of two dayes in days
(define (delta date1 date2)
  (let ((time1 (date->time-utc date1))
        (time2 (date->time-utc date2)))
    (/
      (time-second (time-difference time1 time2))
      60 60 24)))

; Gets today's date without the time
(define (current-day)
  (let ((today (current-date)))
    (make-date 0 0 0 0
               (date-day today)
               (date-month today)
               (date-year today)
               7200)))

; Creates day pairs
(define (take-tuples l)
  (cond ((null? l) '())
        ((null? (cdr l)) '())
        (else (cons (cons (car l) (cadr l)) (take-tuples (cdr l))))))

(define (streaks dates)
  (let ((date-tups
          (take-tuples (cons (current-day) (reverse dates)))))
    (map
      (lambda (tup) (delta (car tup) (cdr tup)))
      date-tups)))

    
(define (streak-current dates)
  (car (streaks dates)))

(define (streak-longest dates)
    (reduce max 0 (streaks dates)))

(define (streak-average dates)
  (let ((total (reduce + 0 (streaks dates)))
        (count (length (streaks dates))))
    (round-two (exact->inexact (/ total count)))))

(define (average-weekly dates)
  (round-two (/ 7 (streak-average dates))))

(define (average-monthly dates)
  (round-two (/ 31 (streak-average dates))))

; I'm sure there is a way to do this, but I just couldn't find
; it in the docs... TODO
(define (round-two n)
  (/ (round (* n 100)) 100))

(define (main args)
  (begin
    (display "Current streak: ")
    (display (streak-current dates)) (newline)
    (display "Longest streak: ")
    (display (streak-longest dates)) (newline)
    (display "Average sreak: ")
    (display (streak-average dates)) (newline)
    (display "Weekly average: ")
    (display (average-weekly dates)) (newline)
    (display "Monthly average: ")
    (display (average-monthly dates)) (newline)))
