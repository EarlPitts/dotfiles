let mapleader = ","
set nocompatible
syntax on

"Plugin Manager
call plug#begin('~/.vim/plugged')

"Utility
Plug 'junegunn/fzf.vim'
Plug 'preservim/nerdtree'
Plug 'tpope/vim-commentary'
Plug 'mhinz/vim-startify'
Plug 'majutsushi/tagbar'
Plug 'vim-syntastic/syntastic'

"Looks
Plug 'arcticicestudio/nord-vim'
Plug 'vim-airline/vim-airline' | Plug 'vim-airline/vim-airline-themes'
"Plug 'ryanoasis/vim-devicons'

"Notes
Plug 'vimwiki/vimwiki'
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() } }

"Snippets
Plug 'SirVer/ultisnips'
Plug 'honza/vim-snippets'

"Git
Plug 'tpope/vim-fugitive'
Plug 'airblade/vim-gitgutter'

"Misc
Plug 'tikhomirov/vim-glsl' " Shader Language support

call plug#end()    

"### Plugin Configs ###

"UltiSnips
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<tab>"
"let g:UltiSnipsJumpBackwardTrigger="<c-z>"

"NERDTree
map <C-n> :NERDTreeToggle<CR>
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
let NERDTreeShowHidden=1

"VimWiki
let g:vimwiki_list = [{'path': '~/Personal/Notes', 'index': 'Home', 'syntax': 'markdown', 'ext': '.wiki'}] 
"let g:vimwiki_folding = 'list'

"Startify
let g:startify_session_persistence = 1
let g:startify_session_dir = '~/.vim/session'
let g:startify_commands = [ ['VimWiki', 'VimwikiIndex'] ]
let g:startify_padding_left = 5
let g:startify_lists = [
        \ { 'type': 'sessions',  'header': ['   Sessions']       },
        \ { 'type': 'bookmarks', 'header': ['   Bookmarks']      },
        \ { 'type': 'commands',  'header': ['   Commands']       },
        \ { 'type': 'files',     'header': ['   MRU']            },
        \ { 'type': 'dir',       'header': ['   MRU '. getcwd()] },
        \ ]

"Airline
let g:airline_powerline_fonts = 1

"Markdown Preview
let g:mkdp_command_for_global = 1 " Make it available for all formats
nmap <leader>md :MarkdownPreview<CR>

"Syntastic
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 2
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0


"### Editor ###

"Indentation
set autoindent " Copy indent when starting new line
set expandtab " Use spaces instead of tabs
filetype plugin indent on " Filetype detection with indent and plugin stuff loaded
set shiftround " Round indent to multiple of shiftwidth
set shiftwidth=4 " Indent size
set smarttab
set tabstop=4
set softtabstop=4 " Number of spaces while editing

"Text Rendering
set display+=lastline
set encoding=UTF-8
set linebreak " Wrap long lines between words
set wrap " Wrap lines
syntax enable " Enable syntax 

"Search
set incsearch " Search as characters are entered
set hlsearch " Highlight matches
set ignorecase
set smartcase
set showmatch " Highlight matching parentheses

"Performance
set lazyredraw " Redraw only when needed

"UI
set noruler
set wildmenu " Visual autocomplete for command menu
set cursorline " Highlight current line
set nu " Show line numbers
set rnu " Relative number
set title
set showcmd	" Show commands in bot line

"Folding
set foldmethod=indent " Fold based on indent level
set foldnestmax=5	" 5 nested fold max
set foldenable " Enable folding
set foldlevelstart=5 " Open most folds by default
nnoremap  <space> za	

"Misc
set hidden " Enables hidden buffers, so you can have modified buffers in the background
set autoread " Reload externally modified files in vim
set backspace=indent,eol,start
set history=1000
set omnifunc=syntaxcomplete#Complete " TODO what's this? :D
set clipboard=unnamed " System clipboard TODO

"Mappings
nmap <C-p> :Files<CR>
nmap <C-b> :Buffers<CR>
nmap <leader>. :Tags<CR>
nmap <leader>, :w<CR>
nnoremap <C-g> :Rg 
nnoremap ; :

"Copy to clipboard
nmap <C-c> "*y
vmap <C-c> "*y

set pastetoggle=<leader>p

"Windows
tnoremap <C-h> <C-\><C-N><C-w>h
tnoremap <C-j> <C-\><C-N><C-w>j
tnoremap <C-k> <C-\><C-N><C-w>k
tnoremap <C-l> <C-\><C-N><C-w>l
inoremap <C-h> <C-\><C-N><C-w>h
inoremap <C-j> <C-\><C-N><C-w>j
inoremap <C-k> <C-\><C-N><C-w>k
inoremap <C-l> <C-\><C-N><C-w>l
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

"Terminal
"tnoremap <C-b> <C-\><C-N> :Buffers<CR>
"tnoremap <C-p> <C-\><C-N> :Files<CR>

"Colors
"set t_Co=256
colorscheme nord
let g:nord_bold=1
let g:nord_italic=1
let g:nord_underline=1
let g:nord_italic_comments=1

"let g:nord_cursor_line_number_background=1
"Fordprog
autocmd BufNewFile,BufRead *.ih set syntax=cpp

:so ~/.vim/terminal.vim
